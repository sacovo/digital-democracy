stages:
  - lint
  - build
  - test
  - analyze

cache:
  key: ${CI_JOB_NAME}
  paths:
    - .sonar/cache
# 
# This file is a template, and might need editing before it works on your project.
docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

black:
  stage: lint
  script:
    - docker run -v $(pwd):/data -w /data milansuk/python-black black --check .

isort:
  stage: lint
  script:
    - docker run -v $(pwd):/data -w /data python /bin/bash -c "pip install isort; isort ."

pylint:
  stage: lint
  script:
    - docker run -v $(pwd):/data -w /data python /bin/bash -c "pip install pylint pylint-django; pip install -r requirements.txt; pylint --load-plugins pylint_django papers backend"
  allow_failure: true

django-test-master:
  stage: test
  script:
    - docker run "$CI_REGISTRY_IMAGE" python manage.py test
  only:
    - master

django-test:
  stage: test
  script:
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" python manage.py test
  except:
    - master

bandit:
  stage: lint
  script:
    - docker run -v $(pwd):/data -w /data python /bin/bash -c "pip install bandit; bandit -r ."

sonarqube:
  image: sonarsource/sonar-scanner-cli:latest
  stage: analyze
  allow_failure: true
  only:
    - master
    - dev
  script:
    - docker run -v $(pwd):/data -w /data -e "SONAR_HOST_URL=${CI_SONARQUBE_HOST_URL}" -e "SONAR_TOKEN=${CI_SONARQUBE_TOKEN}" -e "SONAR_USER_HOME=${CI_PROJECT_DIR}/.sonar" sonarsource/sonar-scanner-cli:latest bash -c "sonar-scanner -Dsonar.qualitygate.wait=true; rm -rf .scannerwork;"

